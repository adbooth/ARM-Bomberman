<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [L:\labs\lab7_versions\lab7_v6\lab7.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image L:\labs\lab7_versions\lab7_v6\lab7.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 728]: Last Updated: Tue Mar 01 11:43:07 2016
<BR><P>
<H3>Maximum Stack Usage =          8 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[177e63c]">Reset_Handler</a>
 <LI><a href="#[177e678]">__user_initial_stackheap</a>
 <LI><a href="#[17805a4]">div_and_mod</a>
 <LI><a href="#[1780568]">edit_register</a>
 <LI><a href="#[177fe24]">brick_setup</a>
 <LI><a href="#[177fde8]">change_character</a>
 <LI><a href="#[177fdac]">change_score_value</a>
 <LI><a href="#[177fd70]">change_time_value</a>
 <LI><a href="#[177fd34]">check_location</a>
 <LI><a href="#[177fcf8]">clear_screen</a>
 <LI><a href="#[177fcbc]">cursor_position</a>
 <LI><a href="#[177fc80]">cursor_down</a>
 <LI><a href="#[177fc44]">cursor_left</a>
 <LI><a href="#[177fc08]">cursor_right</a>
 <LI><a href="#[177fbcc]">cursor_up</a>
 <LI><a href="#[177fb90]">draw_board</a>
 <LI><a href="#[177fb54]">draw_bomberman</a>
 <LI><a href="#[177fb18]">draw_on_board</a>
 <LI><a href="#[177fadc]">edit_array</a>
 <LI><a href="#[177faa0]">populate_array</a>
 <LI><a href="#[177fa64]">read_array</a>
 <LI><a href="#[177f6a4]">read_push_btns</a>
 <LI><a href="#[177f668]">display_digit</a>
 <LI><a href="#[177f62c]">LEDs</a>
 <LI><a href="#[177f5f0]">pin_clear</a>
 <LI><a href="#[177f5b4]">RGB_LED</a>
 <LI><a href="#[177f578]">rgb_set</a>
 <LI><a href="#[177f53c]">seg_pattern_display</a>
 <LI><a href="#[177f500]">GPIO_init</a>
 <LI><a href="#[177f4c4]">uart_init</a>
 <LI><a href="#[1780748]">lab7</a>
 <LI><a href="#[177fa28]">get_rand</a>
 <LI><a href="#[177eccc]">timer_init</a>
 <LI><a href="#[177ec90]">interrupt_init</a>
 <LI><a href="#[177ec54]">FIQ_Handler</a>
 <LI><a href="#[177f488]">cmp_str</a>
 <LI><a href="#[177ebdc]">numberString_to_int</a>
 <LI><a href="#[177f9ec]">int_to_numberString</a>
 <LI><a href="#[177ec18]">newline</a>
 <LI><a href="#[177f9b0]">output_character</a>
 <LI><a href="#[177f974]">output_string</a>
 <LI><a href="#[177f938]">println</a>
 <LI><a href="#[177eba0]">prompt</a>
 <LI><a href="#[177eb64]">read_character</a>
 <LI><a href="#[177eb28]">read_string</a>
 <LI><a href="#[177eaec]">reverse_string</a>
 <LI><a href="#[177f8fc]">set_figs</a>
 <LI><a href="#[177f8c0]">store_string</a>
 <LI><a href="#[177eab0]">string_length</a>
 <LI><a href="#[177e81c]">Undef_Handler</a>
 <LI><a href="#[177e7e0]">SWI_Handler</a>
 <LI><a href="#[177e7a4]">PAbt_Handler</a>
 <LI><a href="#[177e768]">DAbt_Handler</a>
 <LI><a href="#[177e72c]">IRQ_Handler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[177e81c]">Undef_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[177e81c]">Undef_Handler</a><BR>
 <LI><a href="#[177e7e0]">SWI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[177e7e0]">SWI_Handler</a><BR>
 <LI><a href="#[177e7a4]">PAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[177e7a4]">PAbt_Handler</a><BR>
 <LI><a href="#[177e768]">DAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[177e768]">DAbt_Handler</a><BR>
 <LI><a href="#[177e72c]">IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[177e72c]">IRQ_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[177e63c]">Reset_Handler</a>
 <LI><a href="#[177e81c]">Undef_Handler</a>
 <LI><a href="#[177e7e0]">SWI_Handler</a>
 <LI><a href="#[177e7a4]">PAbt_Handler</a>
 <LI><a href="#[177e768]">DAbt_Handler</a>
 <LI><a href="#[177e72c]">IRQ_Handler</a>
 <LI><a href="#[177ec54]">FIQ_Handler</a>
 <LI><a href="#[177dfe8]">__main</a>
 <LI><a href="#[1780784]">main</a>
 <LI><a href="#[1779e84]">__I$use$semihosting</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[177e63c]"></a>Reset_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[177dfe8]"></a>__main</STRONG> (ARM, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[1777508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[177debc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[1777508]"></a>__scatterload</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[177dfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[17774cc]"></a>__scatterload_rt2</STRONG> (ARM, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[177debc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[1777490]"></a>__scatterload_null</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[1777634]"></a>__decompress</STRONG> (ARM, 96 bytes, Stack size unknown bytes, __dclz77c.o(!!dclz77c), UNUSED)

<P><STRONG><a name="[17775f8]"></a>__decompress2</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __dclz77c.o(!!dclz77c), UNUSED)

<P><STRONG><a name="[17772ec]"></a>__scatterload_zeroinit</STRONG> (ARM, 44 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[177d0ac]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init &rArr; _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[177aeec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[177da0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li (via Veneer)
</UL>

<P><STRONG><a name="[177b57c]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[177b5f4]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000028))

<P><STRONG><a name="[177b9b4]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[177b84c]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[177b48c]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[177b504]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[177b8c4]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[177b7d4]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[177bdb0]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[177bc0c]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))

<P><STRONG><a name="[177bb94]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[177bb1c]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[177baa4]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[177ba2c]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[177bcc0]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[177b450]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002F))

<P><STRONG><a name="[177b93c]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[177b75c]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[177bd38]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[177a1cc]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[177ac94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls (via Veneer)
</UL>

<P><STRONG><a name="[1779560]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[1779380]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[1779344]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[17794ac]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[1779614]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[1779434]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[177debc]"></a>__rt_entry</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[17774cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[177dfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[177dac0]"></a>__rt_entry_presh_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[177d73c]"></a>__rt_entry_sh</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[177d610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[177da0c]"></a>__rt_entry_li</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_li &rArr; __rt_lib_init &rArr; _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[177d0ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>

<P><STRONG><a name="[177da48]"></a>__rt_entry_postsh_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[177d958]"></a>__rt_entry_main</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Calls]<UL><LI><a href="#[177d4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via BX)
</UL>

<P><STRONG><a name="[177d994]"></a>__rt_entry_postli_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[177c92c]"></a>__rt_exit</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[177d4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via Veneer)
</UL>

<P><STRONG><a name="[177ac94]"></a>__rt_exit_ls</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[177a1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (via Veneer)
</UL>

<P><STRONG><a name="[177acd0]"></a>__rt_exit_prels_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[177ac58]"></a>__rt_exit_exit</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[177a6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[1780784]"></a>main</STRONG> (ARM, 20 bytes, Stack size 8 bytes, lab7cwrapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = main
</UL>
<BR>[Calls]<UL><LI><a href="#[1780748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
</UL>
<P><STRONG><a name="[177e678]"></a>__user_initial_stackheap</STRONG> (ARM, 0 bytes, Stack size unknown bytes, startup.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[177d610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[177e150]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[177e114]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[177e0d8]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[177d610]"></a>__user_setup_stackheap</STRONG> (ARM, 96 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[177ca1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[177e678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[177d73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[177d4a8]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[177c92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit (via Veneer)
<LI><a href="#[177d430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[177d958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[177ca58]"></a>__user_libspace</STRONG> (ARM, 12 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[177ca1c]"></a>__user_perproc_libspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[177d610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[177c9e0]"></a>__user_perthread_libspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[177a94c]"></a>__rt_fp_status_addr</STRONG> (ARM, 16 bytes, Stack size 0 bytes, rt_fp_status_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[177aeec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[177a6b8]"></a>_sys_exit</STRONG> (ARM, 20 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[177ac58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[1779e84]"></a>__I$use$semihosting</STRONG> (ARM, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sys_exit.o(.text)
</UL>
<P><STRONG><a name="[1779e48]"></a>__use_no_semihosting_swi</STRONG> (ARM, 4 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[177aeec]"></a>_fp_init</STRONG> (ARM, 24 bytes, Stack size 8 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[177a94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_fp_status_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[177d0ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>

<P><STRONG><a name="[177aeb0]"></a>__fplib_config_pureend_doubles</STRONG> (ARM, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[17805a4]"></a>div_and_mod</STRONG> (ARM, 0 bytes, Stack size unknown bytes, general_library.o(general_library))
<BR><BR>[Called By]<UL><LI><a href="#[177f9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_to_numberString
<LI><a href="#[177fa28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_rand
<LI><a href="#[177faa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;populate_array
<LI><a href="#[177fb90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_board
</UL>

<P><STRONG><a name="[1780568]"></a>edit_register</STRONG> (ARM, 0 bytes, Stack size unknown bytes, general_library.o(general_library), UNUSED)

<P><STRONG><a name="[177fe24]"></a>brick_setup</STRONG> (ARM, 0 bytes, Stack size unknown bytes, graphics_library.o(graphics_library))
<BR><BR>[Calls]<UL><LI><a href="#[177fa28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_rand
<LI><a href="#[177fadc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_array
<LI><a href="#[177fb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_on_board
<LI><a href="#[177fd34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_location
</UL>
<BR>[Called By]<UL><LI><a href="#[1780748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
</UL>

<P><STRONG><a name="[177fde8]"></a>change_character</STRONG> (ARM, 0 bytes, Stack size unknown bytes, graphics_library.o(graphics_library), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[177f9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_character
<LI><a href="#[177fcbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cursor_position
</UL>

<P><STRONG><a name="[177fdac]"></a>change_score_value</STRONG> (ARM, 0 bytes, Stack size unknown bytes, graphics_library.o(graphics_library))
<BR><BR>[Calls]<UL><LI><a href="#[177f8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_figs
<LI><a href="#[177f974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_string
<LI><a href="#[177f9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_to_numberString
<LI><a href="#[177fcbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cursor_position
</UL>
<BR>[Called By]<UL><LI><a href="#[177fa28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_rand
<LI><a href="#[1780748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
</UL>

<P><STRONG><a name="[177fd70]"></a>change_time_value</STRONG> (ARM, 0 bytes, Stack size unknown bytes, graphics_library.o(graphics_library))
<BR><BR>[Calls]<UL><LI><a href="#[177f8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_figs
<LI><a href="#[177f974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_string
<LI><a href="#[177f9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_to_numberString
<LI><a href="#[177fcbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cursor_position
</UL>
<BR>[Called By]<UL><LI><a href="#[177ec54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
<LI><a href="#[1780748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
</UL>

<P><STRONG><a name="[177fd34]"></a>check_location</STRONG> (ARM, 0 bytes, Stack size unknown bytes, graphics_library.o(graphics_library))
<BR><BR>[Calls]<UL><LI><a href="#[177fa64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_array
</UL>
<BR>[Called By]<UL><LI><a href="#[177fe24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brick_setup
</UL>

<P><STRONG><a name="[177fcf8]"></a>clear_screen</STRONG> (ARM, 0 bytes, Stack size unknown bytes, graphics_library.o(graphics_library))
<BR><BR>[Calls]<UL><LI><a href="#[177f974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_string
<LI><a href="#[177fcbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cursor_position
</UL>
<BR>[Called By]<UL><LI><a href="#[1780748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
</UL>

<P><STRONG><a name="[177fcbc]"></a>cursor_position</STRONG> (ARM, 0 bytes, Stack size unknown bytes, graphics_library.o(graphics_library))
<BR><BR>[Calls]<UL><LI><a href="#[177f9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_character
<LI><a href="#[177f9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_to_numberString
</UL>
<BR>[Called By]<UL><LI><a href="#[177fb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_on_board
<LI><a href="#[177fcf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_screen
<LI><a href="#[177fd70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_time_value
<LI><a href="#[177fdac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_score_value
<LI><a href="#[177fde8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_character
</UL>

<P><STRONG><a name="[177fc80]"></a>cursor_down</STRONG> (ARM, 0 bytes, Stack size unknown bytes, graphics_library.o(graphics_library), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[177f974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_string
</UL>

<P><STRONG><a name="[177fc44]"></a>cursor_left</STRONG> (ARM, 0 bytes, Stack size unknown bytes, graphics_library.o(graphics_library), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[177f974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_string
</UL>

<P><STRONG><a name="[177fc08]"></a>cursor_right</STRONG> (ARM, 0 bytes, Stack size unknown bytes, graphics_library.o(graphics_library), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[177f974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_string
</UL>

<P><STRONG><a name="[177fbcc]"></a>cursor_up</STRONG> (ARM, 0 bytes, Stack size unknown bytes, graphics_library.o(graphics_library), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[177f974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_string
</UL>

<P><STRONG><a name="[177fb90]"></a>draw_board</STRONG> (ARM, 0 bytes, Stack size unknown bytes, graphics_library.o(graphics_library))
<BR><BR>[Calls]<UL><LI><a href="#[177f938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;println
<LI><a href="#[177f9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_character
<LI><a href="#[177fb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_on_board
<LI><a href="#[17805a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;div_and_mod
</UL>
<BR>[Called By]<UL><LI><a href="#[1780748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
</UL>

<P><STRONG><a name="[177fb54]"></a>draw_bomberman</STRONG> (ARM, 0 bytes, Stack size unknown bytes, graphics_library.o(graphics_library), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[177fb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_on_board
</UL>

<P><STRONG><a name="[177fb18]"></a>draw_on_board</STRONG> (ARM, 0 bytes, Stack size unknown bytes, graphics_library.o(graphics_library))
<BR><BR>[Calls]<UL><LI><a href="#[177f9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_character
<LI><a href="#[177fcbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cursor_position
</UL>
<BR>[Called By]<UL><LI><a href="#[177fa28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_rand
<LI><a href="#[177fb54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bomberman
<LI><a href="#[177fb90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_board
<LI><a href="#[177fe24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brick_setup
<LI><a href="#[1780748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
</UL>

<P><STRONG><a name="[177fadc]"></a>edit_array</STRONG> (ARM, 0 bytes, Stack size unknown bytes, graphics_library.o(graphics_library))
<BR><BR>[Called By]<UL><LI><a href="#[177fa28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_rand
<LI><a href="#[177fe24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brick_setup
<LI><a href="#[1780748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
</UL>

<P><STRONG><a name="[177faa0]"></a>populate_array</STRONG> (ARM, 0 bytes, Stack size unknown bytes, graphics_library.o(graphics_library))
<BR><BR>[Calls]<UL><LI><a href="#[177f8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_string
<LI><a href="#[17805a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;div_and_mod
</UL>
<BR>[Called By]<UL><LI><a href="#[1780748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
</UL>

<P><STRONG><a name="[177fa64]"></a>read_array</STRONG> (ARM, 0 bytes, Stack size unknown bytes, graphics_library.o(graphics_library))
<BR><BR>[Called By]<UL><LI><a href="#[177fa28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_rand
<LI><a href="#[177fd34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_location
<LI><a href="#[1780748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
</UL>

<P><STRONG><a name="[177f6a4]"></a>read_push_btns</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hardware_library.o(hardware_library), UNUSED)

<P><STRONG><a name="[177f668]"></a>display_digit</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hardware_library.o(hardware_library))
<BR><BR>[Calls]<UL><LI><a href="#[177f53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seg_pattern_display
</UL>
<BR>[Called By]<UL><LI><a href="#[177fa28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_rand
</UL>

<P><STRONG><a name="[177f62c]"></a>LEDs</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hardware_library.o(hardware_library))
<BR><BR>[Called By]<UL><LI><a href="#[177fa28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_rand
<LI><a href="#[1780748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
</UL>

<P><STRONG><a name="[177f5f0]"></a>pin_clear</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hardware_library.o(hardware_library))
<BR><BR>[Called By]<UL><LI><a href="#[177f500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_init
</UL>

<P><STRONG><a name="[177f5b4]"></a>RGB_LED</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hardware_library.o(hardware_library), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[177f488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_str
<LI><a href="#[177f578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rgb_set
</UL>

<P><STRONG><a name="[177f578]"></a>rgb_set</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hardware_library.o(hardware_library))
<BR><BR>[Called By]<UL><LI><a href="#[177f5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_LED
<LI><a href="#[177fa28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_rand
</UL>

<P><STRONG><a name="[177f53c]"></a>seg_pattern_display</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hardware_library.o(hardware_library))
<BR><BR>[Called By]<UL><LI><a href="#[177f668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_digit
</UL>

<P><STRONG><a name="[177f500]"></a>GPIO_init</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hardware_library.o(hardware_library))
<BR><BR>[Calls]<UL><LI><a href="#[177f5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[1780748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
</UL>

<P><STRONG><a name="[177f4c4]"></a>uart_init</STRONG> (ARM, 0 bytes, Stack size unknown bytes, hardware_library.o(hardware_library))
<BR><BR>[Called By]<UL><LI><a href="#[1780748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
</UL>

<P><STRONG><a name="[1780748]"></a>lab7</STRONG> (ARM, 0 bytes, Stack size unknown bytes, lab7.o(main))
<BR><BR>[Calls]<UL><LI><a href="#[177eb64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_character
<LI><a href="#[177ec90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_init
<LI><a href="#[177eccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[177f4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[177f500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_init
<LI><a href="#[177f62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDs
<LI><a href="#[177f938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;println
<LI><a href="#[177f974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_string
<LI><a href="#[177f9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_to_numberString
<LI><a href="#[177fa28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_rand
<LI><a href="#[177fa64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_array
<LI><a href="#[177faa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;populate_array
<LI><a href="#[177fadc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_array
<LI><a href="#[177fb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_on_board
<LI><a href="#[177fb90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_board
<LI><a href="#[177fcf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_screen
<LI><a href="#[177fd70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_time_value
<LI><a href="#[177fdac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_score_value
<LI><a href="#[177fe24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brick_setup
</UL>
<BR>[Called By]<UL><LI><a href="#[1780784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>

<P><STRONG><a name="[177fa28]"></a>get_rand</STRONG> (ARM, 0 bytes, Stack size unknown bytes, lab7.o(main))
<BR><BR>[Calls]<UL><LI><a href="#[177f578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rgb_set
<LI><a href="#[177f62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDs
<LI><a href="#[177f668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_digit
<LI><a href="#[177fa64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_array
<LI><a href="#[177fadc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;edit_array
<LI><a href="#[177fb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_on_board
<LI><a href="#[177fdac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_score_value
<LI><a href="#[17805a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;div_and_mod
</UL>
<BR>[Called By]<UL><LI><a href="#[177fe24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brick_setup
<LI><a href="#[1780748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
</UL>

<P><STRONG><a name="[177eccc]"></a>timer_init</STRONG> (ARM, 0 bytes, Stack size unknown bytes, lab7.o(main))
<BR><BR>[Called By]<UL><LI><a href="#[1780748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
</UL>

<P><STRONG><a name="[177ec90]"></a>interrupt_init</STRONG> (ARM, 0 bytes, Stack size unknown bytes, lab7.o(main))
<BR><BR>[Called By]<UL><LI><a href="#[1780748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
</UL>

<P><STRONG><a name="[177ec54]"></a>FIQ_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, lab7.o(main))
<BR><BR>[Calls]<UL><LI><a href="#[177fd70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_time_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[177f488]"></a>cmp_str</STRONG> (ARM, 0 bytes, Stack size unknown bytes, string_library.o(string_library), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[177f5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_LED
</UL>

<P><STRONG><a name="[177ebdc]"></a>numberString_to_int</STRONG> (ARM, 0 bytes, Stack size unknown bytes, string_library.o(string_library), UNUSED)

<P><STRONG><a name="[177f9ec]"></a>int_to_numberString</STRONG> (ARM, 0 bytes, Stack size unknown bytes, string_library.o(string_library))
<BR><BR>[Calls]<UL><LI><a href="#[177eaec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse_string
<LI><a href="#[17805a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;div_and_mod
</UL>
<BR>[Called By]<UL><LI><a href="#[177fcbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cursor_position
<LI><a href="#[177fd70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_time_value
<LI><a href="#[177fdac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_score_value
<LI><a href="#[1780748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
</UL>

<P><STRONG><a name="[177ec18]"></a>newline</STRONG> (ARM, 0 bytes, Stack size unknown bytes, string_library.o(string_library))
<BR><BR>[Calls]<UL><LI><a href="#[177f9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_character
</UL>
<BR>[Called By]<UL><LI><a href="#[177eba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prompt
<LI><a href="#[177f938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;println
</UL>

<P><STRONG><a name="[177f9b0]"></a>output_character</STRONG> (ARM, 0 bytes, Stack size unknown bytes, string_library.o(string_library))
<BR><BR>[Called By]<UL><LI><a href="#[177eb28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_string
<LI><a href="#[177ec18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;newline
<LI><a href="#[177f974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_string
<LI><a href="#[177fb18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_on_board
<LI><a href="#[177fb90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_board
<LI><a href="#[177fcbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cursor_position
<LI><a href="#[177fde8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_character
</UL>

<P><STRONG><a name="[177f974]"></a>output_string</STRONG> (ARM, 0 bytes, Stack size unknown bytes, string_library.o(string_library))
<BR><BR>[Calls]<UL><LI><a href="#[177f9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_character
</UL>
<BR>[Called By]<UL><LI><a href="#[177eba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prompt
<LI><a href="#[177f938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;println
<LI><a href="#[177fbcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cursor_up
<LI><a href="#[177fc08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cursor_right
<LI><a href="#[177fc44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cursor_left
<LI><a href="#[177fc80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cursor_down
<LI><a href="#[177fcf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_screen
<LI><a href="#[177fd70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_time_value
<LI><a href="#[177fdac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_score_value
<LI><a href="#[1780748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
</UL>

<P><STRONG><a name="[177f938]"></a>println</STRONG> (ARM, 0 bytes, Stack size unknown bytes, string_library.o(string_library))
<BR><BR>[Calls]<UL><LI><a href="#[177ec18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;newline
<LI><a href="#[177f974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_string
</UL>
<BR>[Called By]<UL><LI><a href="#[177fb90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_board
<LI><a href="#[1780748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
</UL>

<P><STRONG><a name="[177eba0]"></a>prompt</STRONG> (ARM, 0 bytes, Stack size unknown bytes, string_library.o(string_library), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[177eb28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_string
<LI><a href="#[177ec18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;newline
<LI><a href="#[177f974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_string
</UL>

<P><STRONG><a name="[177eb64]"></a>read_character</STRONG> (ARM, 0 bytes, Stack size unknown bytes, string_library.o(string_library))
<BR><BR>[Called By]<UL><LI><a href="#[177eb28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_string
<LI><a href="#[1780748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lab7
</UL>

<P><STRONG><a name="[177eb28]"></a>read_string</STRONG> (ARM, 0 bytes, Stack size unknown bytes, string_library.o(string_library), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[177eb64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_character
<LI><a href="#[177f9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_character
</UL>
<BR>[Called By]<UL><LI><a href="#[177eba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prompt
</UL>

<P><STRONG><a name="[177eaec]"></a>reverse_string</STRONG> (ARM, 0 bytes, Stack size unknown bytes, string_library.o(string_library))
<BR><BR>[Calls]<UL><LI><a href="#[177eab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_length
</UL>
<BR>[Called By]<UL><LI><a href="#[177f9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_to_numberString
</UL>

<P><STRONG><a name="[177f8fc]"></a>set_figs</STRONG> (ARM, 0 bytes, Stack size unknown bytes, string_library.o(string_library))
<BR><BR>[Calls]<UL><LI><a href="#[177eab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_length
</UL>
<BR>[Called By]<UL><LI><a href="#[177fd70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_time_value
<LI><a href="#[177fdac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_score_value
</UL>

<P><STRONG><a name="[177f8c0]"></a>store_string</STRONG> (ARM, 0 bytes, Stack size unknown bytes, string_library.o(string_library))
<BR><BR>[Called By]<UL><LI><a href="#[177faa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;populate_array
</UL>

<P><STRONG><a name="[177eab0]"></a>string_length</STRONG> (ARM, 0 bytes, Stack size unknown bytes, string_library.o(string_library))
<BR><BR>[Called By]<UL><LI><a href="#[177eaec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse_string
<LI><a href="#[177f8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_figs
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[177e81c]"></a>Undef_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[177e81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[177e81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[177e7e0]"></a>SWI_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[177e7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[177e7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[177e7a4]"></a>PAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[177e7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[177e7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[177e768]"></a>DAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[177e768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[177e768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[177e72c]"></a>IRQ_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[177e72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[177e72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[177d430]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[177d4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
